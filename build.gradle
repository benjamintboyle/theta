plugins {
    id 'com.github.spotbugs' version '3.0.0'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.freefair.lombok' version '4.1.6'
    id 'checkstyle'
    id 'eclipse'
    id 'java'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 13
targetCompatibility = 13

bootJar {
    archiveBaseName = 'theta'
    archiveVersion =  '0.3'
}

dependencies {
    // Production code dependencies
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('io.reactivex.rxjava3:rxjava:3.0.0-RC5')
    // implementation('org.projectlombok:lombok')
    // annotationProcessor('org.projectlombok:lombok')

    implementation files('libs/interactive-brokers-api-9.72.18.jar')

    // Test code dependencies
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
      exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // Junit 5 IDE Runner
    testRuntimeOnly('org.junit.platform:junit-platform-launcher:1.5.2')
}

test {
    useJUnitPlatform()

    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: Runtime.runtime.availableProcessors()
}

wrapper {
    gradleVersion = '6.0.1'
}

checkstyle {
    toolVersion '8.27'
    configFile file("config/checkstyle/google_checks.xml")
    // configFile file("${configDirectory}/google_checks.xml")
}

spotbugs {
    // toolVersion = '4.0.0-beta4'
    ignoreFailures = false
    effort = 'max'
    reportLevel = 'low'
}

// To generate an HTML report instead of XML
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports.xml.enabled = false
  reports.html.enabled = true
}
